{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/project/[slug]",
      "regex": "^/project/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/project/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/server/[slug]",
      "regex": "^/server/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/server/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/sshKeys/[slug]",
      "regex": "^/sshKeys/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/sshKeys/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/support/[slug]",
      "regex": "^/support/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/support/(?<nxtPslug>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/Homepage",
      "regex": "^/Homepage(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Homepage(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/account",
      "regex": "^/account(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/account(?:/)?$"
    },
    {
      "page": "/billing",
      "regex": "^/billing(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/billing(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/finance",
      "regex": "^/finance(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/finance(?:/)?$"
    },
    {
      "page": "/forgot_pwd",
      "regex": "^/forgot_pwd(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/forgot_pwd(?:/)?$"
    },
    {
      "page": "/help",
      "regex": "^/help(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/help(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/project",
      "regex": "^/project(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/project(?:/)?$"
    },
    {
      "page": "/server",
      "regex": "^/server(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/server(?:/)?$"
    },
    {
      "page": "/server/create",
      "regex": "^/server/create(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/server/create(?:/)?$"
    },
    {
      "page": "/signup",
      "regex": "^/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup(?:/)?$"
    },
    {
      "page": "/sshKeys",
      "regex": "^/sshKeys(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sshKeys(?:/)?$"
    },
    {
      "page": "/support",
      "regex": "^/support(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/support(?:/)?$"
    },
    {
      "page": "/support/create",
      "regex": "^/support/create(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/support/create(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}